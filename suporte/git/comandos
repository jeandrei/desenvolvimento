se der problema de merge tentar
git reset -- hard
git commit
git pull origin master

*Ver o status, arquivos modificados que precisam ser atualizados
git status
*Adiciona arquivo
git add nome do arquivo
*Adicionar tudo
git add .
*Adicionar tudo
git add -A
*Atualizar coneúdo para o repositório
git commit -m 'Descrição da atualização, o que foi feito'
	ex: git commit -m 'Validação de CPF do formulário de clientes'
*Upload das suas atualizações
git push origin master
*Download das atualizações realizadas pelos colaboradores
git pull origin master
*Cancelar uma atualização upload
git reset --soft HEAD^
*Reverter uma atualização
git reset --hard HEAD^
*Clonar o repositório para um diretório local
git clone https://github.com/nome do usuario/nome do repositorio.git
*Remover um diretório ou arquivo
git rm -r nome da pasta
git commit -m 'Remocao do arquivo ou pasta'
git push origin master
*Informações do repositório
git remote -v

******************Branching - Ramificação, usado para criar cópia do projeto e trabalhar na cópia para só depois de revisado e aprovado ser aplicado ao projeto original
************************
*Primeiro atualizamos o repositório
git pull
*Verificamos em qual branch estamos localizados master é o principal como se fosse o tronco da arvore branch são ramificações
git branch
*Adicionamos uma ramificação
git branch nomedaramificacao
	ex: git branch feature1
*Listamos as ramificações
git branch
*Vai ter master e feature1 - feature1 vai ser uma cópia do master
*Para trabalhar em feature1 ou seja mudar para o branche criado
git checkout feature1
*Aplicar as alterações ao master
*Primeiro atualizamos o master
git checkout master
git pull origin master
*Voltamos para o branch
git checkout feature1
*Aplicamos as alterações
git merge master
*Pode ser feita pelo ambiente onlido do git também

para restaurar para uma versão anterior
para ver as versões
git log
para restaurar 
git checkout 631123e4d6276b49059a7ae96b1de86c928f71c2
